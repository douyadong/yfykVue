/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. 项目名称：yfyk
2. 文件名：src -> libraries -> apiDataFilter.js
3. 作者：zhaohuagang@lifang.com
4. 备注：请求api接口获取数据
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/

/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
加载相关资源
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
import apiConf from "../configs/api" ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
ApiDataFilter类的定义
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
class ApiDataFilter {
    constructor($http) {
        this.$http = $http ;
    }
    /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    请求数据 , successCallback的唯一参数为：response，返回的json数据应该这样取得：response.body
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    request({ apiPath , data = {} , method = "get" , contentType , jsonp = "callback" , successCallback }) {
        let apiUrl = this.pathToUrl(apiPath) ;
        method =  method.toLowerCase() ;
        let opts = {
            "timeout" : apiConf.timeout
        } ;
        /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        如果启用jsonp模式，而且如果设置了jsonp参数
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/ 
        if(apiConf.jsonp.enable) {
            method = "get" ;
            if(jsonp !== "" && jsonp !== undefined) opts.jsonp = jsonp ;
        }
        if(method === "post")  {
            if(contentType) opts.headers["content-type"] = contentType ;
            opts.body = data ;        
        }
        else opts.params = data ;
        /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        不是生产环境在控制台输出请求log
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/ 
        if(apiConf.stageEnv !== "prod") {
            console.log("http请求(" + apiUrl + ")后端接口数据("+method+")：" + JSON.stringify(data)) ;
        }        
        /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        发起请求
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
        if(method === "get") {
            if(apiConf.jsonp.enable) {
                this.$http.jsonp(apiUrl , opts ).then( (res) => {
                    let status = parseInt(res.body.status , 10) ;
                    if(status === apiConf.successStatusCode) successCallback(res) ;
                    else this.errorCallback(res) ;
                } , this.errorCallback) ;
            }
            else {
                this.$http.get(apiUrl , opts ).then( (res) => {
                    let status = parseInt(res.body.status , 10) ;
                    if(status === apiConf.successStatusCode) successCallback(res) ;
                    else this.errorCallback(res) ;
                } , this.errorCallback) ;
            }
        }
        if(method === "post") this.$http.post(apiUrl , opts ).then( (res) => {
            let status = parseInt(res.body.status , 10) ;
            if(status === apiConf.successStatusCode) successCallback(res) ;
            else this.errorCallback(res) ;
        } , this.errorCallback) ;
    }
    /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    请求成功处理方法
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    /*
    complete(res , successCallback) {
        let status = parseInt(res.body.status , 10) ;
        if(status === apiConf.successStatusCode) successCallback(res) ;
        else this.errorCallback(res) ;
    }
    */
    /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    请求错误处理方法
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    errorCallback(res) {
        console.log("API error") ;
    }
    /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    根据apiPath返回apiUrl
    @apiPath：从api配置中suffix往下层写如："example.rent.detail"
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    pathToUrl(apiPath) {
        let pathArray = apiPath.split(".") ;
        let prefix = apiConf.prefix[apiConf.stageEnv] ;
        let suffix = apiConf.suffix ;
        for(let n = 0 ; n < pathArray.length ; n ++) {
            suffix = suffix[pathArray[n]] ;
        }
        if(suffix === undefined) suffix = "" ;
        return prefix + "/" + suffix ;
    }   
     /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    整个class定义结束
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
}

export default ApiDataFilter ;
